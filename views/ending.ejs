<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= locals.mode === 'list' ? '엔딩 기록 목록' : '게임 엔딩 결과' %> - 머드게임</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            padding: 20px;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            margin: 0;
            color: #2c3e50;
            font-size: 2.5rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .ending-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
            margin-bottom: 20px;
        }

        .ending-header {
            text-align: center;
            padding: 25px;
            border-radius: 12px;
            margin-bottom: 30px;
            color: white;
            font-size: 1.8rem;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .ending-header.death {
            background: linear-gradient(135deg, #dc3545, #c82333);
        }

        .ending-header.escape {
            background: linear-gradient(135deg, #28a745, #218838);
        }

        .ending-header.quit {
            background: linear-gradient(135deg, #6c757d, #5a6268);
        }

        .ending-message {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 10px;
            margin: 20px 0;
            border-left: 5px solid #007bff;
            font-size: 1.1rem;
            line-height: 1.6;
            white-space: pre-line;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 12px;
            text-align: center;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            display: block;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .game-summary-section {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .game-summary-section h4 {
            margin-top: 0;
            color: #495057;
        }

        .game-summary-content {
            background: white;
            padding: 15px;
            border-radius: 8px;
            line-height: 1.6;
            border-left: 4px solid #007bff;
        }

        .discoveries-section {
            background: #e9ecef;
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .discoveries-section h4 {
            margin-top: 0;
            color: #495057;
        }

        .discovery-item {
            background: white;
            padding: 8px 12px;
            margin: 5px 0;
            border-radius: 5px;
            border-left: 3px solid #28a745;
            font-size: 0.95rem;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            flex-wrap: wrap;
            margin-top: 40px;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .btn-primary {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #28a745, #218838);
            color: white;
        }

        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #5a6268);
            color: white;
        }

        .loading {
            text-align: center;
            padding: 50px;
            font-size: 1.2rem;
            color: #6c757d;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #007bff;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error-message {
            background: #f8d7da;
            color: #721c24;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            margin: 20px 0;
            border: 1px solid #f5c6cb;
        }

        /* 엔딩 목록 관련 스타일 */
        .endings-list {
            max-height: 600px;
            overflow-y: auto;
        }

        .ending-item {
            background: #f8f9fa;
            padding: 15px;
            margin: 10px 0;
            border-radius: 8px;
            border-left: 4px solid #007bff;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .ending-item:hover {
            background: #e9ecef;
            transform: translateX(5px);
        }

        .ending-item.death {
            border-left-color: #dc3545;
        }

        .ending-item.escape {
            border-left-color: #28a745;
        }

        .ending-item.quit {
            border-left-color: #6c757d;
        }

        .ending-item-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

        .ending-item-type {
            font-weight: bold;
            font-size: 1.1rem;
        }

        .ending-item-date {
            font-size: 0.9rem;
            color: #6c757d;
        }

        .ending-item-stats {
            font-size: 0.9rem;
            color: #495057;
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .action-buttons {
                flex-direction: column;
                align-items: center;
            }
            
            .btn {
                width: 200px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🎮 로그라이크 던전 탈출</h1>
            <p><%= locals.mode === 'list' ? '모든 엔딩 기록' : '게임 엔딩 결과' %></p>
        </div>

        <div id="loading" class="loading">
            <div class="spinner"></div>
            <% if (locals.mode === 'list') { %>
                엔딩 목록을 불러오는 중...
            <% } else { %>
                엔딩 정보를 불러오는 중...
            <% } %>
        </div>

        <div id="content" class="ending-container" style="display: none;">
            <!-- 엔딩 내용이 여기에 동적으로 삽입됩니다 -->
        </div>

        <div id="error-content" class="ending-container" style="display: none;">
            <div class="error-message">
                <h3>❌ 정보를 불러올 수 없습니다</h3>
                <p id="error-text">알 수 없는 오류가 발생했습니다.</p>
                <div class="action-buttons">
                    <a href="/" class="btn btn-primary">메인으로 돌아가기</a>
                </div>
            </div>
        </div>
    </div>

    <script>
        var mode = '<%= locals.mode || "single" %>';
        
        if (mode === 'list') {
            // 전체 엔딩 목록 모드
            $(document).ready(function() {
                loadAllEndings();
            });

            async function loadAllEndings() {
                try {
                    const response = await axios.get('/api/game/ending', {
                        withCredentials: true
                    });

                    if (response.data.code === "result") {
                        displayEndingsList(response.data.value_ext2.endings);
                    } else {
                        throw new Error(response.data.value_ext2 || '엔딩 목록을 불러올 수 없습니다.');
                    }
                } catch (error) {
                    console.error('엔딩 목록 로드 오류:', error);
                    showError(error.response?.data?.value_ext2 || error.message || '엔딩 목록을 불러올 수 없습니다.');
                }
            }

            function displayEndingsList(endings) {
                $('#loading').hide();
                
                if (endings.length === 0) {
                    $('#content').html(`
                        <div class="error-message">
                            <h3>📝 아직 완료된 게임이 없습니다</h3>
                            <p>게임을 완료하면 여기에 엔딩 기록이 표시됩니다.</p>
                            <div class="action-buttons">
                                <a href="/" class="btn btn-primary">새 게임 시작하기</a>
                            </div>
                        </div>
                    `).show();
                    return;
                }

                let endingsHtml = '<h3>🏆 모든 엔딩 기록</h3><div class="endings-list">';
                
                endings.forEach(ending => {
                    const typeIcon = getEndingIcon(ending.ending_type);
                    const typeText = getEndingTypeText(ending.ending_type);
                    
                    endingsHtml += `
                        <div class="ending-item ${ending.ending_type}" onclick="viewEndingDetail('${ending.game_id}')">
                            <div class="ending-item-header">
                                <span class="ending-item-type">${typeIcon} ${typeText}</span>
                                <span class="ending-item-date">${formatDate(ending.completed_at)}</span>
                            </div>
                            <div class="ending-item-stats">
                                턴: ${ending.final_turn} | 사망: ${ending.total_deaths}회 | 발견: ${ending.discoveries_count}개
                            </div>
                        </div>
                    `;
                });
                
                endingsHtml += '</div>';
                
                $('#content').html(endingsHtml + `
                    <div class="action-buttons">
                        <a href="/" class="btn btn-primary">새 게임 시작</a>
                        <button onclick="window.close()" class="btn btn-secondary">창 닫기</button>
                    </div>
                `).show();
            }

            function viewEndingDetail(gameId) {
                window.open(`/ending/${gameId}`, '_blank');
            }

        } else {
            // 개별 엔딩 모드
            var gameId = '<%= locals.gameId || "" %>';
            
            $(document).ready(function() {
                if (gameId && gameId !== 'ending') {
                    loadEndingData(gameId);
                } else {
                    showError('잘못된 게임 ID입니다.');
                }
            });

            async function loadEndingData(gameId) {
                try {
                    const response = await axios.get(`/api/game/ending/${gameId}`, {
                        withCredentials: true
                    });

                    if (response.data.code === "result" && response.data.value === 1) {
                        displayEnding(response.data.value_ext2);
                    } else {
                        throw new Error(response.data.value_ext2 || '엔딩 데이터를 찾을 수 없습니다.');
                    }
                } catch (error) {
                    console.error('엔딩 로드 오류:', error);
                    showError(error.response?.data?.value_ext2 || error.message || '엔딩 정보를 불러올 수 없습니다.');
                }
            }

            function displayEnding(ending) {
                $('#loading').hide();
                
                const endingData = ending;
                const endingType = endingData.ending_type || 'quit';
                const endingTypeText = getEndingTypeText(endingType);
                const discoveries = endingData.discoveries || [];
                
                // 게임 요약 생성
                const gameSummary = generateGameSummary(endingData);
                
                const endingHtml = `
                    <div class="ending-header ${endingType}">
                        ${getEndingIcon(endingType)} ${endingTypeText}
                    </div>

                    <div class="ending-message">
                        ${endingData.ending_story || '게임이 종료되었습니다.'}
                    </div>

                    <div class="stats-grid">
                        <div class="stat-card">
                            <span class="stat-number">${endingData.final_turn || 0}</span>
                            <span class="stat-label">최종 턴</span>
                        </div>
                        <div class="stat-card">
                            <span class="stat-number">${endingData.total_deaths || 0}</span>
                            <span class="stat-label">총 사망 횟수</span>
                        </div>
                        <div class="stat-card">
                            <span class="stat-number">${endingData.discoveries_count || 0}</span>
                            <span class="stat-label">발견한 정보</span>
                        </div>
                        <div class="stat-card">
                            <span class="stat-number">${formatDate(ending.completed_at)}</span>
                            <span class="stat-label">완료 시간</span>
                        </div>
                    </div>

                    ${endingData.cause_of_death ? `
                        <div class="ending-message" style="border-left-color: #dc3545;">
                            <strong>사망 원인:</strong> ${endingData.cause_of_death}
                        </div>
                    ` : ''}

                    <div class="game-summary-section">
                        <h4>🎮 게임 요약</h4>
                        <div class="game-summary-content">
                            ${gameSummary}
                        </div>
                    </div>

                    ${discoveries.length > 0 ? `
                        <div class="discoveries-section">
                            <h4>🔍 발견한 정보들</h4>
                            ${discoveries.map(discovery => `
                                <div class="discovery-item">${discovery}</div>
                            `).join('')}
                        </div>
                    ` : ''}

                    <div class="action-buttons">
                        <a href="/" class="btn btn-primary">새 게임 시작</a>
                        <button onclick="viewAllEndings()" class="btn btn-primary">모든 엔딩 보기</button>
                        <button onclick="shareEnding()" class="btn btn-primary">결과 공유</button>
                        <a href="/" class="btn btn-success">메인으로</a>
                    </div>
                `;

                $('#content').html(endingHtml).show();
            }

            async function viewAllEndings() {
                window.open('/endings', '_blank');
            }

            function shareEnding() {
                const url = window.location.href;
                if (navigator.share) {
                    navigator.share({
                        title: '로그라이크 던전 탈출 - 게임 결과',
                        text: '던전 탈출 게임 결과를 확인해보세요!',
                        url: url
                    });
                } else {
                    navigator.clipboard.writeText(url).then(() => {
                        alert('링크가 클립보드에 복사되었습니다!');
                    }).catch(() => {
                        prompt('이 링크를 복사하세요:', url);
                    });
                }
            }
        }

        // 게임 요약 생성 함수
        function generateGameSummary(endingData) {
            const turn = endingData.final_turn || 0;
            const deaths = endingData.total_deaths || 0;
            const discoveries = endingData.discoveries_count || 0;
            
            let summary = `${turn}턴 동안 진행된 로그라이크 던전 탈출 게임`;
            
            if (deaths === 0) {
                summary += " - 완벽한 플레이로 한 번도 죽지 않고 도전";
            } else if (deaths <= 2) {
                summary += ` - ${deaths}번의 죽음을 딛고 도전`;
            } else {
                summary += ` - ${deaths}번의 죽음을 통해 경험을 쌓으며 도전`;
            }
            
            if (discoveries > 0) {
                summary += `. ${discoveries}개의 정보를 발견하며 던전의 비밀에 다가감`;
            } else {
                summary += ". 위험한 던전에서 생존에만 집중";
            }
            
            if (endingData.ending_type === 'death') {
                if (turn <= 3) {
                    summary += ". 초반 함정의 위험성을 몸소 체험";
                } else if (turn <= 6) {
                    summary += ". 중반까지의 생존력을 보였으나 던전의 위험을 극복하지 못함";
                } else {
                    summary += ". 후반까지 생존한 놀라운 적응력을 보임";
                }
            } else if (endingData.ending_type === 'escape') {
                summary += ". 불가능에 가까운 던전 탈출에 성공한 전설적인 모험";
            }
            
            return summary + ".";
        }

        function getEndingTypeText(type) {
            switch (type) {
                case 'death': return '💀 사망';
                case 'escape': return '🎉 탈출 성공';
                case 'quit': return '🚪 게임 종료';
                default: return '❓ 알 수 없음';
            }
        }

        function getEndingIcon(type) {
            switch (type) {
                case 'death': return '💀';
                case 'escape': return '🎉';
                case 'quit': return '🚪';
                default: return '❓';
            }
        }

        function formatDate(dateString) {
            if (!dateString) return '알 수 없음';
            const date = new Date(dateString);
            return date.toLocaleString('ko-KR', {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        function showError(message) {
            $('#loading').hide();
            $('#error-text').text(message);
            $('#error-content').show();
        }
    </script>
</body>
</html>